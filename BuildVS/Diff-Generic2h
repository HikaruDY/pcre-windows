diff --git a/config.h b/config.h
index 60214a3..8f62bfb 100644
--- a/config.h
+++ b/config.h
@@ -1,6 +1,6 @@
-/* config.h.  Generated from config.h.in by configure.  */
 /* config.h.in.  Generated from configure.ac by autoheader.  */
 
+
 /* PCRE is written in Standard C, but there are a few non-standard things it
 can cope with, allowing it to run on SunOS4 and other "close to standard"
 systems.
@@ -32,7 +32,7 @@ sure both macros are undefined; an emulation function will then be used. */
    character or sequence of characters. If BSR_ANYCRLF is defined (to any
    value), this is changed so that backslash-R matches only CR, LF, or CRLF.
    The build-time default can be overridden by the user of PCRE at runtime. */
-/* #undef BSR_ANYCRLF */
+#undef BSR_ANYCRLF
 
 /* If you are compiling for a system that uses EBCDIC instead of ASCII
    character codes, define this macro to any value. You must also edit the
@@ -42,116 +42,116 @@ sure both macros are undefined; an emulation function will then be used. */
    strings are in EBCDIC. If you do not define this macro, PCRE will assume
    input strings are ASCII or UTF-8/16/32 Unicode. It is not possible to build
    a version of PCRE that supports both EBCDIC and UTF-8/16/32. */
-/* #undef EBCDIC */
+#undef EBCDIC
 
 /* In an EBCDIC environment, define this macro to any value to arrange for the
    NL character to be 0x25 instead of the default 0x15. NL plays the role that
    LF does in an ASCII/Unicode environment. The value must also be set in the
    NEWLINE macro below. On systems that can use "configure" or CMake to set
    EBCDIC_NL25, the adjustment of NEWLINE is automatic. */
-/* #undef EBCDIC_NL25 */
+#undef EBCDIC_NL25
 
 /* Define to 1 if you have the `bcopy' function. */
-/* #undef HAVE_BCOPY */
+#undef HAVE_BCOPY
 
 /* Define to 1 if you have the <bits/type_traits.h> header file. */
-/* #undef HAVE_BITS_TYPE_TRAITS_H */
+#undef HAVE_BITS_TYPE_TRAITS_H
 
 /* Define to 1 if you have the <bzlib.h> header file. */
-/* #undef HAVE_BZLIB_H */
+#undef HAVE_BZLIB_H
 
 /* Define to 1 if you have the <dirent.h> header file. */
-/* #undef HAVE_DIRENT_H */
+#undef HAVE_DIRENT_H
 
 /* Define to 1 if you have the <dlfcn.h> header file. */
-/* #undef HAVE_DLFCN_H */
+#undef HAVE_DLFCN_H
 
 /* Define to 1 if you have the <editline/readline.h> header file. */
-/* #undef HAVE_EDITLINE_READLINE_H */
+#undef HAVE_EDITLINE_READLINE_H
 
 /* Define to 1 if you have the <edit/readline/readline.h> header file. */
-/* #undef HAVE_EDIT_READLINE_READLINE_H */
+#undef HAVE_EDIT_READLINE_READLINE_H
 
 /* Define to 1 if you have the <inttypes.h> header file. */
-/* #undef HAVE_INTTYPES_H */
+#define HAVE_INTTYPES_H 1
 
 /* Define to 1 if you have the <limits.h> header file. */
-/* #undef HAVE_LIMITS_H */
+#define HAVE_LIMITS_H 1
 
 /* Define to 1 if the system has the type `long long'. */
-/* #undef HAVE_LONG_LONG */
+#define HAVE_LONG_LONG 1
 
 /* Define to 1 if you have the `memmove' function. */
-/* #undef HAVE_MEMMOVE */
+#define HAVE_MEMMOVE 1
 
 /* Define to 1 if you have the <memory.h> header file. */
-/* #undef HAVE_MEMORY_H */
+#define HAVE_MEMORY_H 1
 
 /* Define if you have POSIX threads libraries and header files. */
-/* #undef HAVE_PTHREAD */
+#undef HAVE_PTHREAD
 
 /* Have PTHREAD_PRIO_INHERIT. */
-/* #undef HAVE_PTHREAD_PRIO_INHERIT */
+#undef HAVE_PTHREAD_PRIO_INHERIT
 
 /* Define to 1 if you have the <readline/history.h> header file. */
-/* #undef HAVE_READLINE_HISTORY_H */
+#undef HAVE_READLINE_HISTORY_H
 
 /* Define to 1 if you have the <readline/readline.h> header file. */
-/* #undef HAVE_READLINE_READLINE_H */
+#undef HAVE_READLINE_READLINE_H
 
 /* Define to 1 if you have the <stdint.h> header file. */
-/* #undef HAVE_STDINT_H */
+#define HAVE_STDINT_H 1
 
 /* Define to 1 if you have the <stdlib.h> header file. */
-/* #undef HAVE_STDLIB_H */
+#define HAVE_STDLIB_H 1
 
 /* Define to 1 if you have the `strerror' function. */
-/* #undef HAVE_STRERROR */
+#define HAVE_STRERROR 1
 
 /* Define to 1 if you have the <string> header file. */
-/* #undef HAVE_STRING */
+#define HAVE_STRING 1
 
 /* Define to 1 if you have the <strings.h> header file. */
-/* #undef HAVE_STRINGS_H */
+#undef HAVE_STRINGS_H
 
 /* Define to 1 if you have the <string.h> header file. */
-/* #undef HAVE_STRING_H */
+#define HAVE_STRING_H 1
 
 /* Define to 1 if you have `strtoimax'. */
-/* #undef HAVE_STRTOIMAX */
+#undef HAVE_STRTOIMAX
 
 /* Define to 1 if you have `strtoll'. */
-/* #undef HAVE_STRTOLL */
+#undef HAVE_STRTOLL
 
 /* Define to 1 if you have `strtoq'. */
-/* #undef HAVE_STRTOQ */
+#undef HAVE_STRTOQ
 
 /* Define to 1 if you have the <sys/stat.h> header file. */
-/* #undef HAVE_SYS_STAT_H */
+#define HAVE_SYS_STAT_H 1
 
 /* Define to 1 if you have the <sys/types.h> header file. */
-/* #undef HAVE_SYS_TYPES_H */
+#define HAVE_SYS_TYPES_H 1
 
 /* Define to 1 if you have the <type_traits.h> header file. */
-/* #undef HAVE_TYPE_TRAITS_H */
+#undef HAVE_TYPE_TRAITS_H
 
 /* Define to 1 if you have the <unistd.h> header file. */
-/* #undef HAVE_UNISTD_H */
+#undef HAVE_UNISTD_H
 
 /* Define to 1 if the system has the type `unsigned long long'. */
-/* #undef HAVE_UNSIGNED_LONG_LONG */
+#define HAVE_UNSIGNED_LONG_LONG 1
 
 /* Define to 1 if the compiler supports simple visibility declarations. */
-/* #undef HAVE_VISIBILITY */
+#undef HAVE_VISIBILITY
 
 /* Define to 1 if you have the <windows.h> header file. */
-/* #undef HAVE_WINDOWS_H */
+#define HAVE_WINDOWS_H 1
 
 /* Define to 1 if you have the <zlib.h> header file. */
-/* #undef HAVE_ZLIB_H */
+#undef HAVE_ZLIB_H
 
 /* Define to 1 if you have `_strtoi64'. */
-/* #undef HAVE__STRTOI64 */
+#define HAVE__STRTOI64 1
 
 /* The value of LINK_SIZE determines the number of bytes used to store links
    as offsets within the compiled regex. The default is 2, which allows for
@@ -164,7 +164,6 @@ sure both macros are undefined; an emulation function will then be used. */
 
 /* Define to the sub-directory in which libtool stores uninstalled libraries.
    */
-/* This is ignored unless you are using libtool. */
 #ifndef LT_OBJDIR
 #define LT_OBJDIR ".libs/"
 #endif
@@ -218,7 +217,7 @@ sure both macros are undefined; an emulation function will then be used. */
 #endif
 
 /* Define to 1 if your C compiler doesn't accept -c and -o together. */
-/* #undef NO_MINUS_C_MINUS_O */
+#undef NO_MINUS_C_MINUS_O
 
 /* PCRE uses recursive function calls to handle backtracking while matching.
    This can sometimes be a problem on systems that have stacks of limited
@@ -227,7 +226,7 @@ sure both macros are undefined; an emulation function will then be used. */
    steam using pcre_recurse_malloc() to obtain memory from the heap. For more
    detail, see the comments and other stuff just above the match() function.
    */
-/* #undef NO_RECURSE */
+#undef NO_RECURSE
 
 /* Name of package */
 #define PACKAGE "pcre"
@@ -250,6 +249,12 @@ sure both macros are undefined; an emulation function will then be used. */
 /* Define to the version of this package. */
 #define PACKAGE_VERSION "8.33"
 
+/* to make a symbol visible */
+#undef PCRECPP_EXP_DECL
+
+/* to make a symbol visible */
+#undef PCRECPP_EXP_DEFN
+
 /* The value of PCREGREP_BUFSIZE determines the size of buffer used by
    pcregrep to hold parts of the file it is searching. This is also the
    minimum value. The actual amount of memory used by pcregrep is three times
@@ -259,6 +264,19 @@ sure both macros are undefined; an emulation function will then be used. */
 #define PCREGREP_BUFSIZE 20480
 #endif
 
+/* to make a symbol visible */
+#undef PCREPOSIX_EXP_DECL
+
+/* to make a symbol visible */
+#undef PCREPOSIX_EXP_DEFN
+
+/* to make a symbol visible */
+#undef PCRE_EXP_DATA_DEFN
+
+/* to make a symbol visible */
+#undef PCRE_EXP_DECL
+
+
 /* If you are compiling for a system other than a Unix-like system or
    Win32, and it needs some magic to be inserted before the definition
    of a function that is exported by the library, define this macro to
@@ -268,10 +286,10 @@ sure both macros are undefined; an emulation function will then be used. */
    This macro apears at the start of every exported function that is part
    of the external API. It does not appear on functions that are "external"
    in the C sense, but which are internal to the library. */
-/* #undef PCRE_EXP_DEFN */
+#undef PCRE_EXP_DEFN
 
 /* Define to any value if linking statically (TODO: make nice with Libtool) */
-/* #undef PCRE_STATIC */
+#undef PCRE_STATIC
 
 /* When calling PCRE via the POSIX interface, additional working storage is
    required for holding the pointers to capturing substrings because PCRE
@@ -286,58 +304,58 @@ sure both macros are undefined; an emulation function will then be used. */
 
 /* Define to necessary symbol if this constant uses a non-standard name on
    your system. */
-/* #undef PTHREAD_CREATE_JOINABLE */
+#undef PTHREAD_CREATE_JOINABLE
 
 /* Define to 1 if you have the ANSI C header files. */
-/* #undef STDC_HEADERS */
+#define STDC_HEADERS 1
 
 /* Define to allow pcretest and pcregrep to be linked with gcov, so that they
    are able to generate code coverage reports. */
-/* #undef SUPPORT_GCOV */
+#undef SUPPORT_GCOV
 
 /* Define to any value to enable support for Just-In-Time compiling. */
-/* #undef SUPPORT_JIT */
+#undef SUPPORT_JIT
 
 /* Define to any value to allow pcregrep to be linked with libbz2, so that it
    is able to handle .bz2 files. */
-/* #undef SUPPORT_LIBBZ2 */
+#undef SUPPORT_LIBBZ2
 
 /* Define to any value to allow pcretest to be linked with libedit. */
-/* #undef SUPPORT_LIBEDIT */
+#undef SUPPORT_LIBEDIT
 
 /* Define to any value to allow pcretest to be linked with libreadline. */
-/* #undef SUPPORT_LIBREADLINE */
+#undef SUPPORT_LIBREADLINE
 
 /* Define to any value to allow pcregrep to be linked with libz, so that it is
    able to handle .gz files. */
-/* #undef SUPPORT_LIBZ */
+#undef SUPPORT_LIBZ
 
 /* Define to any value to enable the 16 bit PCRE library. */
-/* #undef SUPPORT_PCRE16 */
+#define SUPPORT_PCRE16 1
 
 /* Define to any value to enable the 32 bit PCRE library. */
-/* #undef SUPPORT_PCRE32 */
+#define SUPPORT_PCRE32 1
 
 /* Define to any value to enable the 8 bit PCRE library. */
-/* #undef SUPPORT_PCRE8 */
+#define SUPPORT_PCRE8 1
 
 /* Define to any value to enable JIT support in pcregrep. */
-/* #undef SUPPORT_PCREGREP_JIT */
+#define SUPPORT_PCREGREP_JIT 1
 
 /* Define to any value to enable support for Unicode properties. */
-/* #undef SUPPORT_UCP */
+#undef SUPPORT_UCP
 
 /* Define to any value to enable support for the UTF-8/16/32 Unicode encoding.
    This will work even in an EBCDIC environment, but it is incompatible with
    the EBCDIC macro. That is, PCRE can support *either* EBCDIC code *or*
    ASCII/UTF-8/16/32, but not both at once. */
-/* #undef SUPPORT_UTF */
+#define SUPPORT_UTF 1
 
 /* Define to any value for valgrind support to find invalid memory reads. */
-/* #undef SUPPORT_VALGRIND */
+#undef SUPPORT_VALGRIND
 
 /* Version number of package */
-#define VERSION "8.33"
+#define VERSION 8.33
 
 /* Define to empty if `const' does not conform to ANSI C. */
 /* #undef const */
diff --git a/pcre_stringpiece.h b/pcre_stringpiece.h
index 369c10f..599a351 100644
--- a/pcre_stringpiece.h
+++ b/pcre_stringpiece.h
@@ -38,22 +38,20 @@
 #ifndef _PCRE_STRINGPIECE_H
 #define _PCRE_STRINGPIECE_H
 
-#include <cstring>
+#include <string.h>
 #include <string>
 #include <iosfwd>    // for ostream forward-declaration
 
-#if @pcre_have_type_traits@
+#if 0
 #define HAVE_TYPE_TRAITS
 #include <type_traits.h>
-#elif @pcre_have_bits_type_traits@
+#elif 0
 #define HAVE_TYPE_TRAITS
 #include <bits/type_traits.h>
 #endif
 
 #include <pcre.h>
 
-using std::memcmp;
-using std::strlen;
 using std::string;
 
 namespace pcrecpp {
